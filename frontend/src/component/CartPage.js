import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import axios from "axios";

const CartPage = () => {
  const [cartProducts, setCartProducts] = useState([]);
  const [errorMessage, setErrorMessage] = useState("");
  const navigate = useNavigate();
  const [loading, setLoading] = useState(false);

  const getTotalPrice = () => {
    return cartProducts.reduce((total, product) => {
      return total + product.price * product.quantity;
    }, 0);
  };

  useEffect(() => {
    const fetchCartProducts = async () => {
      try {
        const userResponse = await axios.get("https://localhost:5260/api/User/getme");
        const user = userResponse.data;
        //console.log(user.id);

        if (!user.id) {
          navigate("/auth"); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
          return;
        }
        

        // –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ—Ä–∑–∏–Ω—ã
        const cartResponse = await axios.get(
          `https://localhost:5260/api/CartItem/CartProducts?userId=${user.id}`
        );
        setCartProducts(cartResponse.data);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä–∑–∏–Ω—ã:", error);
        navigate("/"); 
      }
    };

    fetchCartProducts();
  }, [navigate]);

  const handlePurchase = async () => {
    const totalCost = getTotalPrice();
    try {
      const userResponse = await axios.get("https://localhost:5260/api/User/getme");
      const user = userResponse.data;

      if (!user.id) {
        navigate("/auth");
        return;
      }

      setLoading(true);
      setErrorMessage("");

      const checkMoneyResponse = await axios.get(
        `https://localhost:5260/api/User/checkmoney?userId=${user.id}&cartCoast=${totalCost}`
      );

      if (checkMoneyResponse.data) {
        // –ï—Å–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
        console.log("–ë–∞–ª–∞–Ω—Å –¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω –¥–ª—è –ø–æ–∫—É–ø–∫–∏.");
        // –õ–æ–≥–∏–∫–∞ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ
      } else {
        // –ï—Å–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç
        setErrorMessage("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ –ª—é–±–æ–π —É–¥–æ–±–Ω—ã–π —Å–µ—Ä–≤–∏—Å.");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ:", error);
      alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–ª–∞–Ω—Å–∞.");
    } finally {
      setLoading(false);
    }
  };


  

  return (
    <div className="container">
      <h1 className="text-center my-4">–ö–æ—Ä–∑–∏–Ω–∞</h1>
      {errorMessage && (
        <div className="alert alert-danger text-center" role="alert">
          {errorMessage} <br />
          <a href="https://www.tinkoff.ru/" target="_blank" rel="noopener noreferrer" className="text-primary">
            üîó –ü–æ–ø–æ–ª–Ω–∏—Ç—å —á–µ—Ä–µ–∑ –¢–∏–Ω—å–∫–æ—Ñ—Ñ
          </a>
          {" | "}
          <a href="https://qiwi.com/" target="_blank" rel="noopener noreferrer" className="text-primary">
            üîó –ü–æ–ø–æ–ª–Ω–∏—Ç—å —á–µ—Ä–µ–∑ QIWI
          </a>
        </div>
      )}
      {cartProducts.length === 0 ? (
        <p>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.</p>
      ) : (
        <>
          {cartProducts.map((product) => (
            <div key={product.productId} className="card my-3">
              <div className="row g-0">
                <div className="col-md-4">
                  <img
                    src={`https://localhost:5260/images/${product.imagePath}`}
                    alt={product.name}
                    className="img-fluid rounded-start"
                    style={{ width: "220px", height: "220px", objectFit: "cover" }}
                  />
                </div>
                <div className="col-md-8">
                  <div className="card-body" style={{ padding: "15px" }}>
                    <h5 className="card-title" style={{ fontSize: "20px" }}>{product.name}</h5>
                    <p className="card-text" style={{ fontSize: "14px", color: "#777" }}>
                      {product.description}
                    </p>
                    <div className="d-flex justify-content-between align-items-center" style={{ marginTop: "10px" }}>
                      <p className="card-text" style={{ fontSize: "18px", fontWeight: "bold", marginBottom: "0" }}>
                        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <span style={{ color: "#ff5722" }}>{product.quantity}</span>
                      </p>
                      <p className="card-text" style={{ fontSize: "18px", fontWeight: "bold", marginBottom: "0" }}>
                        –¶–µ–Ω–∞: <span style={{ color: "#388e3c" }}>{product.price} ‚ÇΩ</span>
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))}

          <div className="d-flex justify-content-between my-4">
            <h4>–û–±—â–∞—è —Ü–µ–Ω–∞: <span style={{ color: "#388e3c" }}>{getTotalPrice()} ‚ÇΩ</span></h4>
              <button className="btn btn-primary" onClick={handlePurchase} disabled={loading}>
                {loading? "–û–±—Ä–∞–±–æ—Ç–∫–∞ ..." : "–ö—É–ø–∏—Ç—å"}
              </button>
          </div>
        </>
      )}
    </div>
  );
};

export default CartPage;