--
-- PostgreSQL database dump
--

-- Dumped from database version 15.6
-- Dumped by pg_dump version 15.6

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: check_product_stock(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_product_stock() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Проверяем, есть ли достаточно товара в наличии
    IF (SELECT "Stock" FROM "Products" WHERE "ProductId" = NEW."ProductId") < NEW."Quantity" THEN
        RAISE EXCEPTION 'Недостаточно товара на складе для продукта %', NEW."ProductId";
    END IF;

    -- Обновляем количество товара на складе
    UPDATE "Products"
    SET "Stock" = "Stock" - NEW."Quantity"
    WHERE "ProductId" = NEW."ProductId";

    RETURN NEW;
END;
$$;


ALTER FUNCTION public.check_product_stock() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: BalanceHistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."BalanceHistory" (
    "BalanceHistoryId" integer NOT NULL,
    "Amount" numeric NOT NULL,
    "Description" text NOT NULL,
    "TransactionDate" timestamp with time zone NOT NULL,
    "UserId" integer NOT NULL
);


ALTER TABLE public."BalanceHistory" OWNER TO postgres;

--
-- Name: BalanceHistory_BalanceHistoryId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."BalanceHistory" ALTER COLUMN "BalanceHistoryId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."BalanceHistory_BalanceHistoryId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Cart; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Cart" (
    "CartId" integer NOT NULL,
    "UserId" integer NOT NULL
);


ALTER TABLE public."Cart" OWNER TO postgres;

--
-- Name: CartItems; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."CartItems" (
    "CartItemId" integer NOT NULL,
    "Quantity" integer NOT NULL,
    "IsVisible" boolean NOT NULL,
    "CartId" integer NOT NULL,
    "ProductId" integer NOT NULL
);


ALTER TABLE public."CartItems" OWNER TO postgres;

--
-- Name: CartItems_CartItemId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."CartItems" ALTER COLUMN "CartItemId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."CartItems_CartItemId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Cart_CartId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Cart" ALTER COLUMN "CartId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Cart_CartId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Categories; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Categories" (
    "CategoryId" integer NOT NULL,
    "CategoryName" text NOT NULL
);


ALTER TABLE public."Categories" OWNER TO postgres;

--
-- Name: Categories_CategoryId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Categories" ALTER COLUMN "CategoryId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Categories_CategoryId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: OrderItems; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."OrderItems" (
    "OrderItemId" integer NOT NULL,
    "Quantity" integer NOT NULL,
    "UnitPrice" numeric NOT NULL,
    "OrderId" integer NOT NULL,
    "ProductId" integer NOT NULL
);


ALTER TABLE public."OrderItems" OWNER TO postgres;

--
-- Name: OrderItems_OrderItemId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."OrderItems" ALTER COLUMN "OrderItemId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."OrderItems_OrderItemId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Orders; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Orders" (
    "OrderId" integer NOT NULL,
    "OrderDate" timestamp with time zone NOT NULL,
    "TotalAmount" numeric NOT NULL,
    "UserId" integer NOT NULL
);


ALTER TABLE public."Orders" OWNER TO postgres;

--
-- Name: Orders_OrderId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Orders" ALTER COLUMN "OrderId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Orders_OrderId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Products; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Products" (
    "ProductId" integer NOT NULL,
    "Name" character varying(256) NOT NULL,
    "Description" character varying(500) NOT NULL,
    "Price" numeric DEFAULT 0.01 NOT NULL,
    "Stock" integer NOT NULL,
    "ImagePath" text NOT NULL,
    "CategoryId" integer NOT NULL
);


ALTER TABLE public."Products" OWNER TO postgres;

--
-- Name: Products_ProductId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Products" ALTER COLUMN "ProductId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Products_ProductId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: TopUpCodes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."TopUpCodes" (
    "TopUpCodeId" integer NOT NULL,
    "Code" character varying(50) NOT NULL,
    "Amount" integer NOT NULL,
    "IsUsed" boolean NOT NULL,
    "CreatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "UsedByUserId" integer
);


ALTER TABLE public."TopUpCodes" OWNER TO postgres;

--
-- Name: TopUpCodes_TopUpCodeId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."TopUpCodes" ALTER COLUMN "TopUpCodeId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."TopUpCodes_TopUpCodeId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Users" (
    "UserId" integer NOT NULL,
    "UserName" character varying(100) NOT NULL,
    "Email" text NOT NULL,
    "PasswordHash" character varying(100) NOT NULL,
    "Balance" numeric NOT NULL,
    "UserRole" integer NOT NULL
);


ALTER TABLE public."Users" OWNER TO postgres;

--
-- Name: Users_UserId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Users" ALTER COLUMN "UserId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Users_UserId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: __EFMigrationsHistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL
);


ALTER TABLE public."__EFMigrationsHistory" OWNER TO postgres;

--
-- Data for Name: BalanceHistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."BalanceHistory" ("BalanceHistoryId", "Amount", "Description", "TransactionDate", "UserId") FROM stdin;
1	500	Пополнение через код 1016A2858DFF	2025-05-28 19:14:28.842919+03	2
2	-98	Вы оформили заказа 12	2025-05-28 19:24:33.195503+03	1
3	2000	Пополнение через код A0577558FFC5	2025-05-28 19:27:42.618817+03	1
\.


--
-- Data for Name: Cart; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Cart" ("CartId", "UserId") FROM stdin;
1	1
2	2
3	3
4	4
\.


--
-- Data for Name: CartItems; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."CartItems" ("CartItemId", "Quantity", "IsVisible", "CartId", "ProductId") FROM stdin;
\.


--
-- Data for Name: Categories; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Categories" ("CategoryId", "CategoryName") FROM stdin;
1	Электроника
4	Продукты питания
5	Одежда
\.


--
-- Data for Name: OrderItems; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."OrderItems" ("OrderItemId", "Quantity", "UnitPrice", "OrderId", "ProductId") FROM stdin;
4	3	294	4	11
5	2	3000	4	14
6	5	570	4	12
7	1	114	5	12
8	1	98	6	11
9	1	114	7	12
10	2	228	8	12
11	2	3000	9	14
12	1	114	9	12
13	3	294	9	11
14	1	1050	9	2
15	1	1999.99	10	1
16	1	1500	10	14
17	1	1500	11	14
18	1	98	12	11
\.


--
-- Data for Name: Orders; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Orders" ("OrderId", "OrderDate", "TotalAmount", "UserId") FROM stdin;
4	2025-04-14 21:03:37.289354+03	3864	1
5	2025-04-19 23:00:32.035071+03	114	1
6	2025-04-26 21:31:25.638028+03	98	1
7	2025-04-26 21:43:27.679946+03	114	1
8	2025-05-12 20:07:48.204961+03	228	1
9	2025-05-12 20:09:05.923125+03	4458	1
10	2025-05-12 20:11:18.715477+03	3499.99	2
11	2025-05-19 22:09:17.645904+03	1500	1
12	2025-05-28 19:24:33.146141+03	98	1
\.


--
-- Data for Name: Products; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Products" ("ProductId", "Name", "Description", "Price", "Stock", "ImagePath", "CategoryId") FROM stdin;
10	27 Монитор Samsung ViewFinity S6 S60UD черный	Визуальное совершенство, достойное профессионалов. QHD-разрешение (2560x1440) в сочетании с частотой обновления 100 Гц обеспечивают высокую плотность пикселей и отсутствие дрожания и разрывов изображения. Профессионалы смогут оценить более точную цветопередачу и увеличенное экранное пространство для создания сложных проектов, диаграмм и динамичного видеоконтента.	34999	5	default.jpg	1
12	Сметана 20%	Деревенская сметана	114	37	64124530-1b15-4299-bd50-8c2c0fa4099d.jpg	4
13	Кот	Самый прекрасный кот	1010101010101	1	63dfc972-91ae-4d72-aecf-1b06b918f757.jpg	5
2	Сыр Ламберт	Нежный сливочный сыр	1050	14	default.jpg	4
1	Беспроводные наушники PHILIPS	хорошие наушники в своей ценовой категории	1999.99	9	default.jpg	1
6	Джинсы Levi's	Slime №511	8700	12	default.jpg	5
7	Видеокарта GeForce 3060 ti	Народная карта 30 серии, очень хорошая за свои деньги	36354	5	default.jpg	1
8	27 Монитор LG 27UP650-W серебристый	Монитор LG 27UP650-W с видимой областью экрана размером 597x336 мм позволяет работать с графикой и смотреть фильмы с одинаковым комфортом. Для этого у него трехсторонняя безрамочная конструкция сочетается с разрешением 3840x2160 пикс. и максимальной контрастностью 1200:1. Технология защиты зрения позаботится о том, чтобы глазам пользователя при долгой работе не наносился вред. 	32400	10	default.jpg	1
9	27 Монитор Samsung ViewFinity S6 S27A600UUI черный	Монитор Samsung S27A600UUI с экраном диагональю целых 27 дюймов предоставляет владельцу огромное рабочее и игровое пространство размером 598x336 мм. Дисплей базируется на IPS-матрице, а его разрешение составляет 2560x1440 пикс. Поддержка HDR10 отвечает за трансляцию максимально реалистичного изображения.	29999	8	default.jpg	1
14	Майка	Удобная легкая майка	1500	16	1d2d3d97-c4c5-445f-ac06-b7c7566670fd.jpg	5
15	Тестовый товар	Тестируем добавление с фронта	1111.22	11	d501169f-ed6d-4ba9-abce-ffe27b299eaa.jpg	5
3	Робот Пылесос Xiaomi	Отлично уберет вашу квартиру, сухая и влажная уборка	8999.99	24	default.jpg	1
11	Молоко	Свежее и приятное молоко	98	46	277cf175-2342-4fae-b1f8-369f48f0b94c.png	4
\.


--
-- Data for Name: TopUpCodes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."TopUpCodes" ("TopUpCodeId", "Code", "Amount", "IsUsed", "CreatedAt", "UsedByUserId") FROM stdin;
1	1016A2858DFF	500	f	2025-05-28 19:04:00.708463+03	\N
2	A0577558FFC5	2000	f	2025-05-28 19:27:39.234873+03	\N
\.


--
-- Data for Name: Users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Users" ("UserId", "UserName", "Email", "PasswordHash", "Balance", "UserRole") FROM stdin;
3	string	string	$2a$11$1LR4unx2vK6NDSy7M96Xqe8TDx3hRTfaTlsCz9Y74sfKuWVwDZIyC	0.0	2
4	test3	test3@test.com	$2a$11$6dQpXbJbXbDrfrJ.z92aq.Mb9ScbCIg.ReqY8jhR1y/dfB09xNI02	0.0	2
2	test2	test2@mail.ru	$2a$11$KvZwqUOjnVWKC3oLNLjJ4.ovYJluHWuCYzjNe2YRm9ZMiRqqX/.3G	5000.01	1
1	test	test@mail.com	$2a$11$nWgOFUlTANOQ660Y20fEVu/l8jrzYWx4ZZcK6MgcQdwDfmqstrwZS	5402.0	0
\.


--
-- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."__EFMigrationsHistory" ("MigrationId", "ProductVersion") FROM stdin;
20250519191726_InitialCreate	8.0.8
20250520154200_AddTopUpCodeTable	8.0.8
20250520161209_AddTopUpCodeFix	8.0.8
20250520161957_AddTopUpCodeFix2	8.0.8
\.


--
-- Name: BalanceHistory_BalanceHistoryId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."BalanceHistory_BalanceHistoryId_seq"', 3, true);


--
-- Name: CartItems_CartItemId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."CartItems_CartItemId_seq"', 41, true);


--
-- Name: Cart_CartId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Cart_CartId_seq"', 4, true);


--
-- Name: Categories_CategoryId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Categories_CategoryId_seq"', 5, true);


--
-- Name: OrderItems_OrderItemId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."OrderItems_OrderItemId_seq"', 18, true);


--
-- Name: Orders_OrderId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Orders_OrderId_seq"', 12, true);


--
-- Name: Products_ProductId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Products_ProductId_seq"', 16, true);


--
-- Name: TopUpCodes_TopUpCodeId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."TopUpCodes_TopUpCodeId_seq"', 2, true);


--
-- Name: Users_UserId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Users_UserId_seq"', 4, true);


--
-- Name: BalanceHistory PK_BalanceHistory; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."BalanceHistory"
    ADD CONSTRAINT "PK_BalanceHistory" PRIMARY KEY ("BalanceHistoryId");


--
-- Name: Cart PK_Cart; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Cart"
    ADD CONSTRAINT "PK_Cart" PRIMARY KEY ("CartId");


--
-- Name: CartItems PK_CartItems; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."CartItems"
    ADD CONSTRAINT "PK_CartItems" PRIMARY KEY ("CartItemId");


--
-- Name: Categories PK_Categories; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Categories"
    ADD CONSTRAINT "PK_Categories" PRIMARY KEY ("CategoryId");


--
-- Name: OrderItems PK_OrderItems; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."OrderItems"
    ADD CONSTRAINT "PK_OrderItems" PRIMARY KEY ("OrderItemId");


--
-- Name: Orders PK_Orders; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Orders"
    ADD CONSTRAINT "PK_Orders" PRIMARY KEY ("OrderId");


--
-- Name: Products PK_Products; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Products"
    ADD CONSTRAINT "PK_Products" PRIMARY KEY ("ProductId");


--
-- Name: TopUpCodes PK_TopUpCodes; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."TopUpCodes"
    ADD CONSTRAINT "PK_TopUpCodes" PRIMARY KEY ("TopUpCodeId");


--
-- Name: Users PK_Users; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Users"
    ADD CONSTRAINT "PK_Users" PRIMARY KEY ("UserId");


--
-- Name: __EFMigrationsHistory PK___EFMigrationsHistory; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."__EFMigrationsHistory"
    ADD CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId");


--
-- Name: IX_BalanceHistory_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_BalanceHistory_UserId" ON public."BalanceHistory" USING btree ("UserId");


--
-- Name: IX_CartItems_CartId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_CartItems_CartId" ON public."CartItems" USING btree ("CartId");


--
-- Name: IX_CartItems_ProductId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_CartItems_ProductId" ON public."CartItems" USING btree ("ProductId");


--
-- Name: IX_Cart_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_Cart_UserId" ON public."Cart" USING btree ("UserId");


--
-- Name: IX_OrderItems_OrderId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_OrderItems_OrderId" ON public."OrderItems" USING btree ("OrderId");


--
-- Name: IX_OrderItems_ProductId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_OrderItems_ProductId" ON public."OrderItems" USING btree ("ProductId");


--
-- Name: IX_Orders_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Orders_UserId" ON public."Orders" USING btree ("UserId");


--
-- Name: IX_Products_CategoryId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Products_CategoryId" ON public."Products" USING btree ("CategoryId");


--
-- Name: IX_TopUpCodes_UsedByUserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_TopUpCodes_UsedByUserId" ON public."TopUpCodes" USING btree ("UsedByUserId");


--
-- Name: IX_Users_Email; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_Users_Email" ON public."Users" USING btree ("Email");


--
-- Name: OrderItems trg_check_product_stock; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_check_product_stock BEFORE INSERT ON public."OrderItems" FOR EACH ROW EXECUTE FUNCTION public.check_product_stock();


--
-- Name: BalanceHistory FK_BalanceHistory_Users_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."BalanceHistory"
    ADD CONSTRAINT "FK_BalanceHistory_Users_UserId" FOREIGN KEY ("UserId") REFERENCES public."Users"("UserId") ON DELETE CASCADE;


--
-- Name: CartItems FK_CartItems_Cart_CartId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."CartItems"
    ADD CONSTRAINT "FK_CartItems_Cart_CartId" FOREIGN KEY ("CartId") REFERENCES public."Cart"("CartId") ON DELETE CASCADE;


--
-- Name: CartItems FK_CartItems_Products_ProductId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."CartItems"
    ADD CONSTRAINT "FK_CartItems_Products_ProductId" FOREIGN KEY ("ProductId") REFERENCES public."Products"("ProductId") ON DELETE CASCADE;


--
-- Name: Cart FK_Cart_Users_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Cart"
    ADD CONSTRAINT "FK_Cart_Users_UserId" FOREIGN KEY ("UserId") REFERENCES public."Users"("UserId") ON DELETE CASCADE;


--
-- Name: OrderItems FK_OrderItems_Orders_OrderId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."OrderItems"
    ADD CONSTRAINT "FK_OrderItems_Orders_OrderId" FOREIGN KEY ("OrderId") REFERENCES public."Orders"("OrderId") ON DELETE CASCADE;


--
-- Name: OrderItems FK_OrderItems_Products_ProductId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."OrderItems"
    ADD CONSTRAINT "FK_OrderItems_Products_ProductId" FOREIGN KEY ("ProductId") REFERENCES public."Products"("ProductId") ON DELETE CASCADE;


--
-- Name: Orders FK_Orders_Users_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Orders"
    ADD CONSTRAINT "FK_Orders_Users_UserId" FOREIGN KEY ("UserId") REFERENCES public."Users"("UserId") ON DELETE CASCADE;


--
-- Name: Products FK_Products_Categories_CategoryId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Products"
    ADD CONSTRAINT "FK_Products_Categories_CategoryId" FOREIGN KEY ("CategoryId") REFERENCES public."Categories"("CategoryId") ON DELETE CASCADE;


--
-- Name: TopUpCodes FK_TopUpCodes_Users_UsedByUserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."TopUpCodes"
    ADD CONSTRAINT "FK_TopUpCodes_Users_UsedByUserId" FOREIGN KEY ("UsedByUserId") REFERENCES public."Users"("UserId");


--
-- PostgreSQL database dump complete
--

